import timeimport pyautoguiimport pyperclipimport win32guiimport win32conimport win32apiclass DingDing:    def find_dingtalk_window(self):        """        查找钉钉窗口，若找到则返回窗口句柄，未找到则返回 None。        Returns:            int: 钉钉窗口句柄，如果未找到则返回 None        """        def callback(hwnd, extra):            if win32gui.IsWindowVisible(hwnd):                title = win32gui.GetWindowText(hwnd)                if '钉钉' in title:                    extra.append(hwnd)                    return True        windows = []        win32gui.EnumWindows(callback, windows)        return windows[0] if windows else None    def click_window_position(self, hwnd, x_ratio, y_ratio):        """        点击指定窗口内的相对位置。        Args:            hwnd (int): 窗口句柄            x_ratio (float): 窗口宽度的相对比例，范围 0 到 1            y_ratio (float): 窗口高度的相对比例，范围 0 到 1        """        # 获取窗口位置和大小        left, top, right, bottom = win32gui.GetWindowRect(hwnd)        width = right - left        height = bottom - top        # 计算实际点击位置        x = left + int(width * x_ratio)        y = top + int(height * y_ratio)        # 点击指定位置        win32api.SetCursorPos((x, y))        win32api.mouse_event(win32con.MOUSEEVENTF_LEFTDOWN, x, y, 0, 0)        time.sleep(0.1)        win32api.mouse_event(win32con.MOUSEEVENTF_LEFTUP, x, y, 0, 0)    def search_and_chat(self, friend_name: str, message: str):        """        在钉钉中搜索指定好友并发送消息。        Args:            friend_name (str): 要搜索的好友名称            message (str): 要发送的消息内容        """        # 查找钉钉窗口        hwnd = self.find_dingtalk_window()        if not hwnd:            print("未找到钉钉窗口")            return        # 激活窗口        win32gui.ShowWindow(hwnd, win32con.SW_RESTORE)        win32gui.SetForegroundWindow(hwnd)        time.sleep(1)        # 点击搜索框位置（在窗口顶部约15%的位置）        self.click_window_position(hwnd, 0.5, 0.03)        time.sleep(1)        # 输入搜索内容        pyperclip.copy(friend_name)        pyautogui.hotkey('ctrl', 'v')        time.sleep(0.5)        # 选择第一个搜索结果        pyautogui.press('enter')        time.sleep(0.5)        # 点击聊天输入框（在窗口底部约90%的位置）        self.click_window_position(hwnd, 0.5, 0.9)        time.sleep(0.5)        # 输入消息内容        pyperclip.copy(message)        pyautogui.hotkey('ctrl', 'v')        time.sleep(0.5)        # 发送消息        pyautogui.press('enter')ding_proxy = DingDing()if __name__ == '__main__':    friend_name = "xxx"    message = "你好！这是一条测试消息"    ding_proxy.search_and_chat(friend_name, message)